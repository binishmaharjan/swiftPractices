//
//  ViewController.swift
//  AV Foundation
//
//  Created by Pranjal Satija on 5/22/17.
//  Copyright Â© 2017 Pranjal Satija. All rights reserved.
//

import UIKit
import Photos

class ViewController: UIViewController {
    
    @IBOutlet fileprivate var captureButton: UIButton!
    
    ///Displays a preview of the video output generated by the device's cameras.
    @IBOutlet fileprivate var capturePreviewView: UIView!
    
    ///Allows the user to put the camera in photo mode.
    @IBOutlet fileprivate var photoModeButton: UIButton!
    @IBOutlet fileprivate var toggleCameraButton: UIButton!
    @IBOutlet fileprivate var toggleFlashButton: UIButton!
    
    ///Allows the user to put the camera in video mode.
    @IBOutlet fileprivate var videoModeButton: UIButton!
    
    override var prefersStatusBarHidden: Bool { return true }
  
  let cameraController = CameraController()
  
}

extension ViewController {
    override func viewDidLoad() {
        
        func styleCaptureButton() {
            captureButton.layer.borderColor = UIColor.black.cgColor
            captureButton.layer.borderWidth = 2
            
            captureButton.layer.cornerRadius = min(captureButton.frame.width, captureButton.frame.height) / 2
        }
 
      func configureCamera() {
        cameraController.prepare { (error) in
          if let error = error {
            print(error)
          }
          
          try? self.cameraController.displayPreview(on: self.capturePreviewView)
        }
      }
        
        styleCaptureButton()
        configureCamera()

    }
}

extension ViewController {
  @IBAction func toggleButton(_ sender: UIButton) {
    if cameraController.flashMode == .on {
      cameraController.flashMode = .off
      toggleFlashButton.setImage(UIImage(named: "Flash Off Icon"), for: .normal)
    } else {
      cameraController.flashMode = .on
      toggleFlashButton.setImage(UIImage(named: "Flash On Icon"), for: .normal)
    }
  }
  
  @IBAction func switchCameras( _ sender: UIButton) {
    do {
      try cameraController.switchCamera()
    } catch {
      print(error)
    }
    
    switch cameraController.currentCameraPostion {
    case .some(.front):
      toggleCameraButton.setImage(UIImage(named: "Front Camera Icon"), for: .normal)
    case .some(.rear):
      toggleCameraButton.setImage(UIImage(named: "Rear Camera Icon"), for: .normal)
    case .none:
      return
    }
  }
  
//  cameraController.captureImage {(image, error) in
//  guard let image = image else {
//  print(error ?? "Image capture error")
//  return
//  }
//
//  try? PHPhotoLibrary.shared().performChangesAndWait {
//  PHAssetChangeRequest.creationRequestForAsset(from: image)
//  }
//  }
  
  @IBAction func captureImage(_ sender: UIButton) {
    cameraController.captureImage {(image, error) in
      guard let image = image else {
        print(error ?? "Image capture error")
        return
      }
      
      try? PHPhotoLibrary.shared().performChangesAndWait {
        PHAssetChangeRequest.creationRequestForAsset(from: image)
      }
    }
  }

}

